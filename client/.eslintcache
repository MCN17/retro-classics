[{"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\index.js":"1","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\App.js":"3","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Home.js":"4","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Login.js":"5","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Signup.js":"6","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Detail.js":"7","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\GlobalState.js":"8","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\Navbar\\index.js":"9","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\queries.js":"10","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\actions.js":"11","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\reducers.js":"12","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\auth.js":"13","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\helpers.js":"14","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\mutations.js":"15","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\Cart\\index.js":"16","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\ConsoleMenu\\index.js":"17","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\ProductList\\index.js":"18","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\CartItem\\index.js":"19","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\ProductItem\\index.js":"20","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Success.js":"21","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\OrderHistory.js":"22"},{"size":535,"mtime":1682606542750,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1676646170967,"results":"25","hashOfConfig":"24"},{"size":1766,"mtime":1683290820068,"results":"26","hashOfConfig":"24"},{"size":442,"mtime":1683202789052,"results":"27","hashOfConfig":"24"},{"size":2209,"mtime":1683209347545,"results":"28","hashOfConfig":"24"},{"size":3033,"mtime":1683209359357,"results":"29","hashOfConfig":"24"},{"size":3691,"mtime":1683296423207,"results":"30","hashOfConfig":"24"},{"size":612,"mtime":1679061784140,"results":"31","hashOfConfig":"24"},{"size":1302,"mtime":1683295529178,"results":"32","hashOfConfig":"24"},{"size":942,"mtime":1682003130518,"results":"33","hashOfConfig":"24"},{"size":461,"mtime":1679061784142,"results":"34","hashOfConfig":"24"},{"size":3179,"mtime":1679061784144,"results":"35","hashOfConfig":"24"},{"size":1058,"mtime":1676655292514,"results":"36","hashOfConfig":"24"},{"size":2203,"mtime":1683292950612,"results":"37","hashOfConfig":"24"},{"size":886,"mtime":1676655825017,"results":"38","hashOfConfig":"24"},{"size":2933,"mtime":1683297631157,"results":"39","hashOfConfig":"24"},{"size":1964,"mtime":1683292938230,"results":"40","hashOfConfig":"24"},{"size":2169,"mtime":1683292928204,"results":"41","hashOfConfig":"24"},{"size":1777,"mtime":1683292942822,"results":"42","hashOfConfig":"24"},{"size":1979,"mtime":1683292931933,"results":"43","hashOfConfig":"24"},{"size":999,"mtime":1683292916225,"results":"44","hashOfConfig":"24"},{"size":1740,"mtime":1683295343531,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"yo9iw4",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\index.js",[],["95","96"],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\App.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Home.js",["97","98"],"import React, { useState } from \"react\";\n\n// import components\nimport ProductList from \"../components/ProductList\";\nimport ConsoleMenu from \"../components/ConsoleMenu\";\nimport Cart from \"../components/Cart\";\n\n// Import Bootstrap components\nimport Container from \"react-bootstrap/Container\";\n\n\nconst Home = () => {\n\n  return (\n    <Container fluid>\n        <ConsoleMenu />\n        <ProductList />\n    </Container>\n  );\n};\n\nexport default Home;","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Login.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Signup.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Detail.js",["99"],"import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { idbPromise } from \"../utils/helpers\"\n\n//import components\nimport Cart from \"../components/Cart\";\n\n// import bootstrap components\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY, ADD_TO_CART, UPDATE_PRODUCTS } from \"../utils/actions\";\n\nimport { QUERY_PRODUCTS } from '../utils/queries';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n  \n  const [currentProduct, setCurrentProduct] = useState({})\n  \n  const { data, loading } = useQuery(QUERY_PRODUCTS);\n  \n  const { products, cart } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY, \n        _id: id, \n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n\n      // if updating quantity, use existing item data and increment purchaseQuantity value by one\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart, \n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART, \n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n\n      // if product isn't in the cart yet, add it to the current shopping cart in IndexedDB\n      idbPromise(\"cart\", \"put\", { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART, \n      _id: currentProduct._id\n    });\n\n    // upon removal from cart, delete the item from IndexedDB using the \"currentProduct._id\" to locate what to remove\n    idbPromise(\"cart\", \"delete\", { ...currentProduct });\n  };\n  \n  useEffect(() => {\n\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n\n      // retreived from server\n    } else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n\n      // get cache from idb\n    } else if (!loading) {\n      idbPromise(\"products\", \"get\").then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS, \n          products: indexedProducts\n        });\n      })\n    };\n  }, [products, data, loading, dispatch, id]);\n\n  return (\n    <>\n      {currentProduct ? (\n        <Row className=\"justify-content-center\">\n          <Link to=\"/\">← Back to Games</Link>\n          <Col lg={3}>\n            <Card className=\"mt-3\">\n            <Card.Body>\n            <Card.Title>{currentProduct.name}</Card.Title>\n\n            <Card.Text>{currentProduct.description}</Card.Text>\n\n            <p>\n              <strong>Price:</strong>${currentProduct.price}{' '}\n              <Button className=\"me-1\" onClick={addToCart}>Add to Cart</Button>\n              <Button\n              disabled={!cart.find(game => game._id === currentProduct._id)}\n              onClick={removeFromCart}\n              >Remove from Cart</Button>\n            </p>\n\n            <Card.Img\n              src={`/images/${currentProduct.image}`}\n              alt={currentProduct.name}\n            />\n            </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      ) : null}\n    </>\n  );\n}\n\nexport default Detail;","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\GlobalState.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\Navbar\\index.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\queries.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\actions.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\reducers.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\auth.js",["100"],"import decode from \"jwt-decode\";\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it\"s still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem(\"id_token\");\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem(\"id_token\", idToken);\r\n\r\n    window.location.assign(\"/\");\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem(\"id_token\");\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign(\"/\");\r\n  }\r\n}\r\n\r\nexport default new AuthService();","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\helpers.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\Cart\\index.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\ConsoleMenu\\index.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\ProductList\\index.js",["101"],"import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nimport ProductItem from '../ProductItem';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\n\n// Import Bootstrap components\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n  const { currentConsole } = state;\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  // const products = data?.products || [];\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS, \n        products: data.products\n      });\n\n      // take each product and save it to IndexedDB using the helper function\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n\n      // check if \"loading\" is undefined in useQuery() hook\n\n    } else if (!loading) {\n      // since it's offline, get all of the data from the \"products\" store\n      idbPromise(\"products\", \"get\").then((products) => {\n        // use retreived data to set global state for offline browsing\n        dispatch({\n          type: UPDATE_PRODUCTS, \n          products: products\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentConsole) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.console._id === currentConsole);\n  }\n\n  return (\n    <Row>\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <Row className=\"justify-content-center\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </Row>\n      ) : (\n        <h3>You haven't added any games yet!</h3>\n      )}\n    </Row>\n  );\n}\n\nexport default ProductList;","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\CartItem\\index.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\ProductItem\\index.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Success.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\OrderHistory.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"110","line":6,"column":8,"nodeType":"108","messageId":"109","endLine":6,"endColumn":12},{"ruleId":"106","severity":1,"message":"110","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":12},{"ruleId":"111","severity":1,"message":"112","line":45,"column":1,"nodeType":"113","endLine":45,"endColumn":34},{"ruleId":"106","severity":1,"message":"114","line":12,"column":8,"nodeType":"108","messageId":"109","endLine":12,"endColumn":11},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Cart' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]