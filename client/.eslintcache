[{"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\index.js":"1","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\App.js":"3","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Home.js":"4","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Login.js":"5","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Signup.js":"6","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Detail.js":"7","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\GlobalState.js":"8","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\Navbar\\index.js":"9","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\queries.js":"10","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\actions.js":"11","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\reducers.js":"12","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\auth.js":"13","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\helpers.js":"14","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\mutations.js":"15","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\Cart\\index.js":"16","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\ConsoleMenu\\index.js":"17","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\ProductList\\index.js":"18","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\CartItem\\index.js":"19","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\ProductItem\\index.js":"20","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Success.js":"21","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\OrderHistory.js":"22","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\LandingPage.js":"23"},{"size":535,"mtime":1682606542750,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1676646170967,"results":"26","hashOfConfig":"25"},{"size":1875,"mtime":1684332397566,"results":"27","hashOfConfig":"25"},{"size":442,"mtime":1683807672624,"results":"28","hashOfConfig":"25"},{"size":2209,"mtime":1683807672625,"results":"29","hashOfConfig":"25"},{"size":3033,"mtime":1683807672627,"results":"30","hashOfConfig":"25"},{"size":3691,"mtime":1683807672623,"results":"31","hashOfConfig":"25"},{"size":612,"mtime":1683807672631,"results":"32","hashOfConfig":"25"},{"size":2114,"mtime":1684500035823,"results":"33","hashOfConfig":"25"},{"size":942,"mtime":1683807672638,"results":"34","hashOfConfig":"25"},{"size":461,"mtime":1683807672632,"results":"35","hashOfConfig":"25"},{"size":3179,"mtime":1683807672639,"results":"36","hashOfConfig":"25"},{"size":1014,"mtime":1683807672634,"results":"37","hashOfConfig":"25"},{"size":2203,"mtime":1683807672635,"results":"38","hashOfConfig":"25"},{"size":835,"mtime":1683807672636,"results":"39","hashOfConfig":"25"},{"size":3510,"mtime":1685628178285,"results":"40","hashOfConfig":"25"},{"size":1969,"mtime":1684502586634,"results":"41","hashOfConfig":"25"},{"size":2169,"mtime":1683807672621,"results":"42","hashOfConfig":"25"},{"size":2010,"mtime":1685629599612,"results":"43","hashOfConfig":"25"},{"size":2000,"mtime":1684501141844,"results":"44","hashOfConfig":"25"},{"size":999,"mtime":1683807672630,"results":"45","hashOfConfig":"25"},{"size":1684,"mtime":1683807672626,"results":"46","hashOfConfig":"25"},{"size":1131,"mtime":1684334486512,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"yo9iw4",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\index.js",[],["101","102"],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\App.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Home.js",["103","104"],"import React, { useState } from \"react\";\n\n// import components\nimport ProductList from \"../components/ProductList\";\nimport ConsoleMenu from \"../components/ConsoleMenu\";\nimport Cart from \"../components/Cart\";\n\n// Import Bootstrap components\nimport Container from \"react-bootstrap/Container\";\n\n\nconst Home = () => {\n\n  return (\n    <Container fluid>\n        <ConsoleMenu />\n        <ProductList />\n    </Container>\n  );\n};\n\nexport default Home;","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Login.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Signup.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Detail.js",["105"],"import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { idbPromise } from \"../utils/helpers\"\n\n//import components\nimport Cart from \"../components/Cart\";\n\n// import bootstrap components\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY, ADD_TO_CART, UPDATE_PRODUCTS } from \"../utils/actions\";\n\nimport { QUERY_PRODUCTS } from '../utils/queries';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n  \n  const [currentProduct, setCurrentProduct] = useState({})\n  \n  const { data, loading } = useQuery(QUERY_PRODUCTS);\n  \n  const { products, cart } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY, \n        _id: id, \n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n\n      // if updating quantity, use existing item data and increment purchaseQuantity value by one\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart, \n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART, \n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n\n      // if product isn't in the cart yet, add it to the current shopping cart in IndexedDB\n      idbPromise(\"cart\", \"put\", { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART, \n      _id: currentProduct._id\n    });\n\n    // upon removal from cart, delete the item from IndexedDB using the \"currentProduct._id\" to locate what to remove\n    idbPromise(\"cart\", \"delete\", { ...currentProduct });\n  };\n  \n  useEffect(() => {\n\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n\n      // retreived from server\n    } else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n\n      // get cache from idb\n    } else if (!loading) {\n      idbPromise(\"products\", \"get\").then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS, \n          products: indexedProducts\n        });\n      })\n    };\n  }, [products, data, loading, dispatch, id]);\n\n  return (\n    <>\n      {currentProduct ? (\n        <Row className=\"justify-content-center\">\n          <Link to=\"/\">← Back to Games</Link>\n          <Col lg={3}>\n            <Card className=\"mt-3\">\n            <Card.Body>\n            <Card.Title>{currentProduct.name}</Card.Title>\n\n            <Card.Text>{currentProduct.description}</Card.Text>\n\n            <p>\n              <strong>Price:</strong>${currentProduct.price}{' '}\n              <Button className=\"me-1\" onClick={addToCart}>Add to Cart</Button>\n              <Button\n              disabled={!cart.find(game => game._id === currentProduct._id)}\n              onClick={removeFromCart}\n              >Remove from Cart</Button>\n            </p>\n\n            <Card.Img\n              src={`/images/${currentProduct.image}`}\n              alt={currentProduct.name}\n            />\n            </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      ) : null}\n    </>\n  );\n}\n\nexport default Detail;","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\GlobalState.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\Navbar\\index.js",["106"],"import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\n//import react icons\nimport { faUser, faGamepad, faUserCircle, faCartShopping, faReceipt, faRightFromBracket } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\n// Import Components\nimport Cart from \"../../components/Cart\"\n\nfunction Nav() {\n\n  function displayNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul>\n          <li>\n            <Link className=\"navLinks\" to=\"/orderHistory\">\n              <FontAwesomeIcon icon={faReceipt} />\n              Order History\n            </Link>\n          </li>\n          <li>\n            <Link className=\"navLinks\" to=\"/home\">\n              <FontAwesomeIcon icon={faGamepad} />\n               Games\n            </Link>\n          </li>\n          <li>\n            <a href=\"/\" className=\"navLinks\" onClick={() => Auth.logout()}>\n            <FontAwesomeIcon icon={faRightFromBracket} rotation={180} />\n              Logout\n            </a>\n          </li>\n          <li>\n            <Cart/>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul>\n          <li className=\"signup\">\n            <Link className=\"navLinks\" to=\"/signup\">\n              <FontAwesomeIcon icon={faUserCircle} />\n              Signup\n            </Link>\n          </li>\n          <li>\n            <Link className=\"navLinks\" to=\"/login\">\n              <FontAwesomeIcon icon={faUser} />\n              Login\n            </Link>\n          </li>\n          <li>\n            <Link className=\"navLinks\" to=\"/home\">\n              <FontAwesomeIcon icon={faGamepad} />\n               Games\n            </Link>\n          </li>\n          <li>\n            <Cart/>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"header\">\n      <h1>\n        <Link className=\"retroClassicsLink\" to=\"/\">\n          Retro Classics\n        </Link>\n      </h1>\n\n      <nav className=\"nav\">\n        {displayNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n\n","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\queries.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\actions.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\reducers.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\auth.js",["107"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it\"s still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", idToken);\n\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem(\"id_token\");\n    // this will reload the page and reset the state of the application\n    window.location.assign(\"/\");\n  }\n}\n\nexport default new AuthService();","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\helpers.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\Cart\\index.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\ConsoleMenu\\index.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\ProductList\\index.js",["108"],"import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nimport ProductItem from '../ProductItem';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\n\n// Import Bootstrap components\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n  const { currentConsole } = state;\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  // const products = data?.products || [];\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS, \n        products: data.products\n      });\n\n      // take each product and save it to IndexedDB using the helper function\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n\n      // check if \"loading\" is undefined in useQuery() hook\n\n    } else if (!loading) {\n      // since it's offline, get all of the data from the \"products\" store\n      idbPromise(\"products\", \"get\").then((products) => {\n        // use retreived data to set global state for offline browsing\n        dispatch({\n          type: UPDATE_PRODUCTS, \n          products: products\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentConsole) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.console._id === currentConsole);\n  }\n\n  return (\n    <Row>\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <Row className=\"justify-content-center\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </Row>\n      ) : (\n        <h3>You haven't added any games yet!</h3>\n      )}\n    </Row>\n  );\n}\n\nexport default ProductList;","C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\CartItem\\index.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\components\\ProductItem\\index.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\Success.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\OrderHistory.js",[],"C:\\Users\\Marty\\Desktop\\retro-classics\\client\\src\\pages\\LandingPage.js",["109","110"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//import css\r\nimport \"./style.css\";\r\n\r\n// Import Bootstrap components\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Carousel from 'react-bootstrap/Carousel';\r\n\r\nconst LandingPage = () => {\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"main\">\r\n                <Carousel className=\"carousel-inner\" variant=\"dark\">\r\n                    <Carousel.Item>\r\n                       <img className=\"slideImg\" src=\"/images/slidePic1.jpg\" alt=\"nintendo characters\"/>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img className=\"slideImg\" src=\"/images/slidePic2.jpg\" alt=\"sega genesis console\"/>\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n                <Link to=\"/home\"><Button className=\"gamesButton\">View Games</Button></Link>\r\n            </Row>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default LandingPage;",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"119","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":12},{"ruleId":"115","severity":1,"message":"119","line":7,"column":8,"nodeType":"117","messageId":"118","endLine":7,"endColumn":12},{"ruleId":"115","severity":1,"message":"120","line":7,"column":43,"nodeType":"117","messageId":"118","endLine":7,"endColumn":57},{"ruleId":"121","severity":1,"message":"122","line":45,"column":1,"nodeType":"123","endLine":45,"endColumn":34},{"ruleId":"115","severity":1,"message":"124","line":12,"column":8,"nodeType":"117","messageId":"118","endLine":12,"endColumn":11},{"ruleId":"115","severity":1,"message":"116","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"124","line":10,"column":8,"nodeType":"117","messageId":"118","endLine":10,"endColumn":11},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Cart' is defined but never used.","'faCartShopping' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]